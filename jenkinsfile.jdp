pipeline {
        agent any
        stages {
            stage('Pull') {
                steps {
                    git branch: 'dev', url: 'https://github.com/Adminwagh/backend.git'
        
                }
            }
            stage('Build') {
                steps {
                    sh '/opt/maven/bin/mvn clean package'
                }
            }
            // stage('Test') {
            //     steps {
            //         sh '/opt/maven/bin/mvn sonar:sonar   -Dsonar.projectKey=studentapp   -Dsonar.host.url=http://18.218.5.157:9000   -Dsonar.login=sqp_5ee3d60a4ef5e16f18c411af0de0f8e0c9199f6a'
            //     }
            // }
            stage('Test') {
                steps {
                    withSonarQubeEnv(installationName: 'sonar', credentialsId: 'sonar-cred') {
                        sh 'mvn sonar:sonar -Dsonar.projectKey=backend'
                    }           
                }
            }
            stage('QualityGate') {
                steps {
                    timeout(10) {
                        waitForQualityGate abortPipeline: true, credentialsId: 'sonar-cred'
                    }
                }
            }
            stage('Deploy') {
                steps {
                    sh '''
                        docker build . -t Adminwagh/backend:latest
                        docker push Adminwagh/backend:latest
                        docker rmi Adminwagh/backend:latest
                        kubectl apply -f ./yaml/
                    '''
                }
            }
        }
    }
